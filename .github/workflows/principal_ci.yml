name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main ]

jobs:

  Build-GO:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Dependencies Go
      run: |
          go get -u github.com/gorilla/mux

    - name: Validate coverage Unit Test
      run: |
          cd backend/
          echo [ -------------- Unit Test $i ---------------- ]
          go test -coverprofile cover.out
          go tool cover -func=cover.out
          CoverageFile=$(go tool cover -func=cover.out)
          CoverageFile=(${CoverageFile//%/ })
          CoverageFile=${CoverageFile[${#CoverageFile[@]}-1]}
          if [[ ${CoverageFile%%.*} -ge 75 ]];then
              echo -e "Successful Unit test \n"
          else
              echo -e "Unsuccessful Unit test \n"
              exit 1
          fi

    - name: Move Go files and DockerFile
      run: |
        mkdir Files
        mv backend Files
        cp Dockerfile Files
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        name: GO_Docker_Files
        path: Files

  Build-Dockerfile-dev:
    needs: Build-GO
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request'}}
    steps:

    - name: Create directory for Artifact
      run: |
        mkdir Files
        cd Files/

    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.9
      with:
        name: GO_Docker_Files
        path: .

    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v1

    - name: Login to docker hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.USER_DH }}
        password: ${{ secrets.PASSWORD_DH }}  

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        file: Dockerfile
        push: true
        tags: ${{ secrets.USER_DH }}/golang:pruebatecnica-${{ github.actor }}-dev

  Build-Dockerfile-test:
    needs: Build-GO
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:

    - name: Create directory for Artifact
      run: |
        mkdir Files
        cd Files/

    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.9
      with:
        name: GO_Docker_Files
        path: .

    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v1

    - name: Login to docker hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.USER_DH }}
        password: ${{ secrets.PASSWORD_DH }}  

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        file: Dockerfile
        push: true
        tags: ${{ secrets.USER_DH }}/golang:pruebatecnica-test
  
  Build-Dockerfile-prod:
    needs: Build-GO
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'}}
    steps:

    - name: Create directory for Artifact
      run: |
        mkdir Files
        cd Files/

    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.9
      with:
        name: GO_Docker_Files
        path: .

    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v1

    - name: Login to docker hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.USER_DH }}
        password: ${{ secrets.PASSWORD_DH }}  

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        file: Dockerfile
        push: true
        tags: ${{ secrets.USER_DH }}/golang:pruebatecnica-prod